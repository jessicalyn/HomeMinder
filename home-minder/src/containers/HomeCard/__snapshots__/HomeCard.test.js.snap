// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeCard container HomeCard should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HomeCard
    items={
      Array [
        Object {
          "brand": "",
          "category": "Filters",
          "id": "JK1234",
          "lastReplaced": "",
          "model": "",
          "name": "Refrigerator Water Filter",
          "purchaseLocation": "",
          "recommendation": "6 months",
          "room": "Kitchen",
          "type": "Replace",
          "userScheduled": "",
        },
        Object {
          "brand": "",
          "category": "Sponges",
          "id": "IF1234",
          "lastReplaced": "",
          "model": "",
          "name": "Sponge",
          "purchaseLocation": "",
          "recommendation": "2-4 weeks",
          "room": "Kitchen",
          "type": "Replace",
          "userScheduled": "",
        },
        Object {
          "brand": "",
          "category": "Toothbrush",
          "id": "PF123",
          "lastReplaced": "",
          "model": "",
          "name": "Toothbrush",
          "purchaseLocation": "",
          "recommendation": "1-3 months",
          "room": "Bathroom",
          "type": "Replace",
          "userScheduled": "",
        },
      ]
    }
    putUpdatedItem={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
           in your 
        </h2>,
        <h3>
          Complete the sections below to schedule your next Reminder
        </h3>,
        <form
          className="home-form"
          onSubmit={[Function]}
        >
          <label>
            Brand: 
          </label>
          <input
            name="brand"
            onChange={[Function]}
            type="text"
          />
          <label>
            Model: 
          </label>
          <input
            name="model"
            onChange={[Function]}
            type="text"
          />
          <label>
            Purchase Location: 
          </label>
          <input
            name="purchaseLocation"
            onChange={[Function]}
            type="text"
          />
          <label>
            Recommended 
             Timeline: 
            <span />
          </label>
          <label>
            Choose next 
             date:
          </label>
          <Calendar
            className="calendar"
            maxDetail="month"
            minDetail="century"
            name="userSchedule"
            onChange={[Function]}
            returnValue="start"
            showNavigation={true}
            showNeighboringMonth={true}
            view="month"
          />
          <button
            className="card-button"
          >
            Add to Schedule
          </button>
        </form>,
      ],
      "className": "home-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            " in your ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          undefined,
          " in your ",
          undefined,
        ],
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Complete the sections below to schedule your next Reminder",
        },
        "ref": null,
        "rendered": "Complete the sections below to schedule your next Reminder",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Brand: 
            </label>,
            <input
              name="brand"
              onChange={[Function]}
              type="text"
            />,
            <label>
              Model: 
            </label>,
            <input
              name="model"
              onChange={[Function]}
              type="text"
            />,
            <label>
              Purchase Location: 
            </label>,
            <input
              name="purchaseLocation"
              onChange={[Function]}
              type="text"
            />,
            <label>
              Recommended 
               Timeline: 
              <span />
            </label>,
            <label>
              Choose next 
               date:
            </label>,
            <Calendar
              className="calendar"
              maxDetail="month"
              minDetail="century"
              name="userSchedule"
              onChange={[Function]}
              returnValue="start"
              showNavigation={true}
              showNeighboringMonth={true}
              view="month"
            />,
            <button
              className="card-button"
            >
              Add to Schedule
            </button>,
          ],
          "className": "home-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Brand: ",
            },
            "ref": null,
            "rendered": "Brand: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "brand",
              "onChange": [Function],
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Model: ",
            },
            "ref": null,
            "rendered": "Model: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "model",
              "onChange": [Function],
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Purchase Location: ",
            },
            "ref": null,
            "rendered": "Purchase Location: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "purchaseLocation",
              "onChange": [Function],
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Recommended ",
                undefined,
                " Timeline: ",
                <span />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Recommended ",
              undefined,
              " Timeline: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Choose next ",
                undefined,
                " date:",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Choose next ",
              undefined,
              " date:",
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "calendar",
              "maxDetail": "month",
              "minDetail": "century",
              "name": "userSchedule",
              "onChange": [Function],
              "returnValue": "start",
              "showNavigation": true,
              "showNeighboringMonth": true,
              "view": "month",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add to Schedule",
              "className": "card-button",
            },
            "ref": null,
            "rendered": "Add to Schedule",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
             in your 
          </h2>,
          <h3>
            Complete the sections below to schedule your next Reminder
          </h3>,
          <form
            className="home-form"
            onSubmit={[Function]}
          >
            <label>
              Brand: 
            </label>
            <input
              name="brand"
              onChange={[Function]}
              type="text"
            />
            <label>
              Model: 
            </label>
            <input
              name="model"
              onChange={[Function]}
              type="text"
            />
            <label>
              Purchase Location: 
            </label>
            <input
              name="purchaseLocation"
              onChange={[Function]}
              type="text"
            />
            <label>
              Recommended 
               Timeline: 
              <span />
            </label>
            <label>
              Choose next 
               date:
            </label>
            <Calendar
              className="calendar"
              maxDetail="month"
              minDetail="century"
              name="userSchedule"
              onChange={[Function]}
              returnValue="start"
              showNavigation={true}
              showNeighboringMonth={true}
              view="month"
            />
            <button
              className="card-button"
            >
              Add to Schedule
            </button>
          </form>,
        ],
        "className": "home-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              " in your ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            undefined,
            " in your ",
            undefined,
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Complete the sections below to schedule your next Reminder",
          },
          "ref": null,
          "rendered": "Complete the sections below to schedule your next Reminder",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Brand: 
              </label>,
              <input
                name="brand"
                onChange={[Function]}
                type="text"
              />,
              <label>
                Model: 
              </label>,
              <input
                name="model"
                onChange={[Function]}
                type="text"
              />,
              <label>
                Purchase Location: 
              </label>,
              <input
                name="purchaseLocation"
                onChange={[Function]}
                type="text"
              />,
              <label>
                Recommended 
                 Timeline: 
                <span />
              </label>,
              <label>
                Choose next 
                 date:
              </label>,
              <Calendar
                className="calendar"
                maxDetail="month"
                minDetail="century"
                name="userSchedule"
                onChange={[Function]}
                returnValue="start"
                showNavigation={true}
                showNeighboringMonth={true}
                view="month"
              />,
              <button
                className="card-button"
              >
                Add to Schedule
              </button>,
            ],
            "className": "home-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Brand: ",
              },
              "ref": null,
              "rendered": "Brand: ",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "brand",
                "onChange": [Function],
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Model: ",
              },
              "ref": null,
              "rendered": "Model: ",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "model",
                "onChange": [Function],
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Purchase Location: ",
              },
              "ref": null,
              "rendered": "Purchase Location: ",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "purchaseLocation",
                "onChange": [Function],
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Recommended ",
                  undefined,
                  " Timeline: ",
                  <span />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Recommended ",
                undefined,
                " Timeline: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Choose next ",
                  undefined,
                  " date:",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Choose next ",
                undefined,
                " date:",
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "calendar",
                "maxDetail": "month",
                "minDetail": "century",
                "name": "userSchedule",
                "onChange": [Function],
                "returnValue": "start",
                "showNavigation": true,
                "showNeighboringMonth": true,
                "view": "month",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add to Schedule",
                "className": "card-button",
              },
              "ref": null,
              "rendered": "Add to Schedule",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
